{"version":3,"file":"static/js/206.6dfbdabc.chunk.js","mappings":"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","sources":["Services/Services.js","pages/Components/PaginationComponent/Pagination.jsx","pages/Components/resourcestitles/ResourcesTitle.jsx","pages/Dashboard/DashboardTopCards/LastMonthDetail.jsx","pages/Dashboard/DepartMents/DepartmentData.jsx","pages/Dashboard/DepartMents/DepartMents.jsx","pages/Dashboard/DevelopersList/DeveloperList.jsx","pages/Dashboard/Projects/ProjectDataRender.jsx","pages/Dashboard/Projects/Projects.jsx","pages/Dashboard/ResourcesTitles/ResourcesTitles.jsx","pages/Dashboard/Dashboard.jsx"],"sourcesContent":["\r\nexport const sideBarLinks = [ // used\r\n    { linkName: 'Dashboard', linkto: '/dashboard', icon: \"fa-table\" },\r\n    { linkName: 'Employees', linkto: '/employees', icon: \"fa-user\" },\r\n    { linkName: 'Projects', linkto: '/projects', icon: \"fa-file-lines\" },\r\n    { linkName: 'Department', linkto: '/department', icon: \"fa-network-wired\" },\r\n];\r\n\r\nexport const ProjectData = [ // used\r\n    { projectcomplete: 15, progresscolor: \"purple\" },\r\n    { projectcomplete: 25, progresscolor: \"#ef5399\" },\r\n    { projectcomplete: 35, progresscolor: \"green\" },\r\n    { projectcomplete: 45, progresscolor: \"#dbdb1e\" },\r\n    { projectcomplete: 55, progresscolor: \"#7aacdb\" },\r\n    { projectcomplete: 65, progresscolor: \"#525659\" }\r\n];\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n\r\n  const [active, setActive] = useState(1);\r\n\r\n  const handlePageClick = (pageNumber) => {\r\n    setActive(pageNumber);\r\n    onPageChange(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div className='d-flex justify-content-end my-2'>\r\n      <nav>\r\n        <ul className=\"pagination\" id='pagination_Color_setting'>\r\n\r\n          {[\"Previous\", 1, 2, 3, 4, \" Next\"].map(pageNumber => (\r\n            <div style={{ transition: \"2s\" }} key={pageNumber} className={`page-item rounded-0 p-0 m-0 ${active === pageNumber ? 'active' : ''}`} onClick={() => handlePageClick(pageNumber)}>\r\n              <Link className=\"page-link rounded-0 \" to=\"\">{pageNumber}</Link>\r\n            </div>\r\n          ))\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination","import React, { useState } from 'react';\r\nimport CanvasJSReact from '@canvasjs/react-charts';\r\n\r\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nconst ResourcesTitle = () => {\r\n\r\n  // const [countemployee , setCountEmployees] = useState('');\r\n  // useEffect(() => {\r\n  //   const getEmployes = localStorage.getItem(`Employes`)\r\n  //   const parseEmployee = JSON.parse(getEmployes);\r\n  //   setCountEmployees(parseEmployee)\r\n  // }, [])\r\n\r\n  const [dataPoints] = useState([\r\n    // { name: countemployee.department  , y: 12 }\r\n    { name: \"Senior data Scientist\", y: 3 },\r\n    { name: \"Junior Data Scientist\", y: 4 },\r\n    { name: \"Senior Data Scientist\", y: 7, exploded: true },\r\n    { name: \"Data Engineer\", y: 7 },\r\n    { name: \"Associate Data Engine\", y: 2 },\r\n    { name: \"Principal Software Engineer\", y: 7 },\r\n  ]);\r\n\r\n  const [totalY] = useState(\r\n    dataPoints.reduce((sum, dataPoint) => sum + dataPoint.y, 0)\r\n  );\r\n\r\n  const options = {\r\n    animationEnabled: true,\r\n    subtitles: [\r\n      {\r\n        text: `Total: ${totalY}`,\r\n        verticalAlign: \"center\",\r\n        fontSize: 20,\r\n        dockInsidePlotArea: true,\r\n      },\r\n    ],\r\n    data: [\r\n      {\r\n        type: \"doughnut\",\r\n        showInLegend: true,\r\n        indexLabel: \"{name} {y}\",\r\n        dataPoints: dataPoints,\r\n      },\r\n    ],\r\n    toolTip: {\r\n      enabled: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className='card'>\r\n      <h5 className='card-header'>Resources Titles</h5>\r\n      <CanvasJSChart options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourcesTitle;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst LastMonthDetail = ({Nothingtoshow}) => {\r\n\r\n  const [isData, setIsData] = useState(false);\r\n  const [employeeLength, setEmployeeLength] = useState([]);\r\n  const [projectLength, setProjectLength] = useState([]);\r\n  const [clientLength, setClientLength] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const employeeCount = localStorage.getItem('Employes');\r\n    const employeeLengthData = JSON.parse(employeeCount);\r\n    setEmployeeLength(employeeLengthData);\r\n\r\n    const projectCount = localStorage.getItem('addnewproject');\r\n    const projectLengthData = JSON.parse(projectCount);\r\n    setProjectLength(projectLengthData);\r\n    setClientLength(projectLengthData);\r\n\r\n    setIsData(!!projectLengthData && !!employeeLengthData);\r\n  }, []);\r\n\r\n  const cardsData = [\r\n    { title: 'Total Employees', number: employeeLength.length , icon: 'fa-solid fa-people-group', iconbg: 'purple', textcolor: '#02eff7' },\r\n    { title: 'Total Projects', number: projectLength.length, icon: 'fa-solid fa-file-invoice', iconbg: '#02eff7', textcolor: 'red' },\r\n    { title: 'Total Clients', number: clientLength.length, icon: 'fa-solid fa-hand-holding-dollar', iconbg: '#CAE44F', textcolor: '#32CD32' },\r\n  ];\r\n\r\n  return (\r\n    <div className='row g-1'>\r\n      {isData ? (\r\n        cardsData.map((data, index) => (\r\n          <div key={index} className=\"col-md-4 mb-2\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body rounded d-flex justify-content-between\">\r\n                <div>\r\n                  <h5 className='card-title fw-bold '>{data.title || 'Not found'}</h5>\r\n                  <span className='fw-bold small'>{data.number || 'Not found'}</span>\r\n                  <p className='card-text fw-bold small mt-3' style={{ color: `${data.textcolor}` }}>\r\n                    {data.number}\r\n                    <span className='small ms-1 text-dark'>since last month</span>\r\n                  </p>\r\n                </div>\r\n                <div className='card_icons'>\r\n                  <i className={`${data.icon} rounded-pill fs-3 d-flex justify-content-center align-items-center text-light`} style={{ background: `${data.iconbg}` }}></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div className=\"card mb-2\">\r\n\r\n          <div className=\"card-body text-danger text-center fw-bold\">\r\n            <Nothingtoshow />\r\n          </div>\r\n\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LastMonthDetail;\r\n","import React from 'react';\r\n\r\nimport Ali from '../../../Common/EmployImage/Ali.jpeg';\r\nimport Abubaker from '../../../Common/EmployImage/abubaker.jpeg';\r\n\r\nconst DepartmentData = (props) => {\r\n\r\n    return (\r\n\r\n        <div className='row mt-4 '>\r\n\r\n            <div className='col-md-8 col-6'>\r\n                <h5 className='card-title m-0 small'>{props.data.department ? props.data.department : 'Data Not Found'}</h5>\r\n                <p className='card-text small mb-2 small'>\r\n                    <span>Total Resources : </span>\r\n                    12...</p>\r\n            </div>\r\n\r\n            <div className='col-md-4 col-6 d-flex justify-content-end' id='Departments_Img'>\r\n                <img src={Ali} className='img-fluid rounded-pill' alt={`Employee ${props.Index}`} />\r\n                <img src={Abubaker} className='img-fluid rounded-pill ' alt={`Employee ${props.Index}`} />\r\n                <img src={Ali} className='img-fluid rounded-pill' alt={`Employee ${props.Index}`} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepartmentData","import React, { useEffect, useState } from 'react';\r\n\r\nimport DepartmentData from './DepartmentData';\r\n\r\nconst DepartMents = ({Nothingtoshow}) => {\r\n\r\n  const [department, setDepartment] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const getDepartments = localStorage.getItem(`department`);\r\n    const departmentparse = JSON.parse(getDepartments);\r\n    setDepartment(departmentparse);\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <div className='card h-100'>\r\n      <h5 className='card-header'>Departments</h5>\r\n\r\n      {department ?\r\n        <div className=\"card-body\">\r\n\r\n          {\r\n            department.map((data, Index) => (\r\n              <div key={Index}>\r\n                <DepartmentData data={data} Index={Index} />\r\n              </div>\r\n            ))\r\n          }\r\n\r\n        </div>\r\n        :\r\n        <div className='card border-0'>\r\n          <Nothingtoshow classes='mt-md-5 mt-3' />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepartMents;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Pagination from '../../Components/PaginationComponent/Pagination';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DeveloperList = ({Nothingtoshow}) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [employedata, setEmployeData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const totalPages = 10; // Assume you have 10 pages\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const getEmployeData = (data) => {\r\n        navigate(`/employees/${data.id}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getEmploye = localStorage.getItem(`Employes`);\r\n        const employe = JSON.parse(getEmploye);\r\n        setEmployeData(employe);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className='table-responsive'>\r\n\r\n                    {employedata ? (\r\n                        <table className=\"table table-hover table-responsive-sm table-responsive Employ_table\">\r\n                            <thead className='bg-danger'>\r\n                                <tr>\r\n                                    <th scope=\"col\">No</th>\r\n                                    <th scope=\"col\">Employee Name</th>\r\n                                    <th scope='col'>Title</th>\r\n                                    <th scope=\"col\">Department</th>\r\n                                    <th scope=\"col\">Projects</th>\r\n                                    <th scope=\"col\">Assignment</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n\r\n\r\n                                {employedata.map((data, Index, id) => (\r\n\r\n                                    <tr id={data.id} key={Index}>\r\n\r\n                                        <td onClick={() => getEmployeData(data)} className='fw-bold text-center text-nowrap'>{Index + 1}</td>\r\n\r\n                                        <td onClick={() => getEmployeData(data)} >\r\n\r\n                                            <div className='d-flex text-nowrap' >\r\n                                                <img className='img-fluid rounded-pill me-2 ' id='employetable_img' src={data.employeimg} alt=\"not found\" />\r\n\r\n                                                <div className='d-flex flex-column justify-content-center'>\r\n                                                    <p className='small m-0 text-nowrap fw-bold'>\r\n                                                        {data.name ? data.name : 'not found'}\r\n                                                    </p>\r\n                                                    <p className='small m-0'>\r\n                                                        {data.email ? data.email : 'not found'}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </td>\r\n\r\n                                        <td onClick={() => getEmployeData(data)} className='text-nowrap' >{data.jobtitle ? data.jobtitle : 'not found'}</td>\r\n                                        <td onClick={() => getEmployeData(data)} className='text-nowrap' >{data.department ? data.department : 'not found'}</td>\r\n                                        <td onClick={() => getEmployeData(data)} className='text-nowrap' >{data.project ? data.project : 'not found'}</td>\r\n                                        <td onClick={() => getEmployeData(data)} className='text-nowrap' >{data.assignment ? data.assignment : 'not found'}</td>\r\n\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n\r\n                        <div className='card '>\r\n                            <div className=\"card-header\">Employees</div>\r\n                            <Nothingtoshow height='200px' />\r\n                        </div>\r\n\r\n                    )\r\n                    }\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='my-2'>\r\n                <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeveloperList;","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProjectDataRender = ({ data, Index }) => {\r\n\r\n    const [progressEndValue, setProgressEndValue] = useState(data.projectcomplete);\r\n    const projectcomplete = 1;\r\n\r\n    useEffect(() => {\r\n        const circularProgress = document.querySelector(`.circular-progress-${Index}`);\r\n        const progressValue = document.querySelector(`.progress-value-${Index}`);\r\n\r\n        progressValue.textContent = `${progressEndValue}%`;\r\n        circularProgress.style.background = `conic-gradient( ${data.progresscolor} ${progressEndValue * 3.6}deg, #E9ECEF 0deg)`;\r\n        setProgressEndValue(progressEndValue);\r\n    }, [progressEndValue, Index, data.progresscolor]);\r\n\r\n    return (\r\n\r\n        <div className='row'>\r\n\r\n            <div className=\"col-3 py-1\">\r\n                <img className='img-fluid projects_Imgs' src={data.logo} alt=\"Logo Not Found\" />\r\n            </div>\r\n\r\n            <div className=\"col-7 p-0\">\r\n                <div className='card-text fw-bold small'>{data.project}</div>\r\n                <p className='small'><span>Resources in Projects :</span> {data.resourcesnum}10</p>\r\n            </div>\r\n\r\n            <div className=\"col-1 py-1 small\">\r\n                <div className=\"fw-bold small\">\r\n\r\n                    <div className={`circular-progress border-danger circular-progress-${Index}`}>\r\n                        <span className={` progress-value progress-value-${Index} `}>{projectcomplete}</span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ProjectDataRender;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { ProjectData } from '../../../Services/Services';\r\nimport ProjectDataRender from './ProjectDataRender';\r\n\r\nconst Projects = ({Nothingtoshow}) => {\r\n\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getProjectslist = localStorage.getItem(`addnewproject`);\r\n        const refineProject = JSON.parse(getProjectslist);\r\n        setProjects(refineProject);\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='card h-100'>\r\n            <h5 className=\"card-header\" > Projects</h5>\r\n\r\n            <div className=\"card-body \">\r\n                {projects && projects.length > 0 ?\r\n                    <div className=\"d-flex\">\r\n\r\n                        {\r\n                            ProjectData && projects.map((data, Index) => (\r\n                                <div className=\"mt-1\" key={Index}>\r\n                                    <ProjectDataRender data={data} Index={Index} />\r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n                    </div>\r\n                    :\r\n                    <div className='card border-0'>\r\n                       <Nothingtoshow classes='mt-3 mt-md-5' />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Projects","import React from 'react';\r\n\r\nimport ResourcesTitle from '../../Components/resourcestitles/ResourcesTitle';\r\n\r\nconst ResourcesTitles = () => {\r\n  return (\r\n    <div>\r\n      <ResourcesTitle />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResourcesTitles;\r\n","import React from 'react';\r\n\r\n// import EmployeLocation from '../Components/employelocation/EmployeLocation';\r\nimport LastMonthDetail from './DashboardTopCards/LastMonthDetail';\r\nimport DepartMents from './DepartMents/DepartMents';\r\nimport DeveloperList from './DevelopersList/DeveloperList';\r\nimport Projects from './Projects/Projects';\r\nimport ResourcesTitle from './ResourcesTitles/ResourcesTitles';\r\n\r\nconst Nothingtoshow = React.lazy(() => import('../Components/nothingtoshow/Nothingtoshow'));\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  return (\r\n\r\n    <div className='mt-3'>\r\n\r\n      <h3 className='fw-bold my-4'>Dashboard</h3>\r\n\r\n      <div className='row g-2'>\r\n        <LastMonthDetail Nothingtoshow={Nothingtoshow} />\r\n      </div>\r\n\r\n      <div className=\"row g-2 mb-2\">\r\n\r\n        <div className=\"col-md-8\">\r\n          {/* <EmployeLocation /> */}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <Projects Nothingtoshow={Nothingtoshow} />\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"row g-2\">\r\n\r\n        <div className=\"col-md-8\">\r\n          <ResourcesTitle />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <DepartMents Nothingtoshow={Nothingtoshow} />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className='mt-2'>\r\n        <DeveloperList Nothingtoshow={Nothingtoshow} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;"],"names":["sideBarLinks","linkName","linkto","icon","ProjectData","projectcomplete","progresscolor","_ref","currentPage","totalPages","onPageChange","active","setActive","useState","_jsx","className","children","id","map","pageNumber","style","transition","concat","onClick","handlePageClick","Link","to","CanvasJSChart","CanvasJSReact","ResourcesTitle","dataPoints","name","y","exploded","totalY","reduce","sum","dataPoint","options","animationEnabled","subtitles","text","verticalAlign","fontSize","dockInsidePlotArea","data","type","showInLegend","indexLabel","toolTip","enabled","_jsxs","Nothingtoshow","isData","setIsData","employeeLength","setEmployeeLength","projectLength","setProjectLength","clientLength","setClientLength","useEffect","employeeCount","localStorage","getItem","employeeLengthData","JSON","parse","projectCount","projectLengthData","cardsData","title","number","length","iconbg","textcolor","index","color","background","props","department","src","Ali","alt","Index","Abubaker","setDepartment","getDepartments","departmentparse","DepartmentData","classes","setCurrentPage","employedata","setEmployeData","navigate","useNavigate","getEmployeData","getEmploye","employe","_Fragment","scope","employeimg","email","jobtitle","project","assignment","height","Pagination","newPage","progressEndValue","setProgressEndValue","circularProgress","document","querySelector","textContent","logo","resourcesnum","projects","setProjects","getProjectslist","refineProject","ProjectDataRender","ResourcesTitles","React","Dashboard","LastMonthDetail","Projects","DepartMents","DeveloperList"],"sourceRoot":""}